<?xml version="1.0" encoding="UTF-8"?>
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">

	<!--
	 [Layout]
	 %m : 로그내용이 출력
	 %p : trace > debug > info > warn > error 등의 priority 출력
	 %r : 어플리케이션이 시작되어 로깅이벤트가 발생하는 시점까지의 경과시간을 밀리세컨드로 출력
	 %c : 예) 카테고리가 a.b.c 처럼 되어있다면 %c{2}는 b.c가 출력됩니다.
	 %n :  플랫폼 종속적인 개행문자가 출력된다. \r\n 또는 \n 일것이다
	 %d : 로깅이벤트가 일어나 날짜 출력 ( 프로그램의 실행속도를 느리게 한다.)
	     예) %d{HH:mm:ss} 또는 %d{dd MMMM yyyy HH:mm:ss}
	 %C : 호출자의 클래스명 출력
	    예) 클래스구조가 org.apache.xyz.SomeClass 처럼 되어있다면 %C{2}는 xyz.SomeClass 가 출력됩니다
	 %M : 로깅이 발생한 method 이름을 나타냅니다.
	 %F : 로깅이 발생한 프로그램 파일명을 나타냅니다.
	 %l : 로깅이 발생한 caller의 정보를 나타냅니다 
	 %L : 로깅이 발생한 caller의 라인수를 나타냅니다 
	 %x : 로깅이 발생한 thread와 관련된 NDC(nested diagnostic context)를 출력합니다. 
	 %X : 로깅이 발생한 thread와 관련된 MDC(mapped diagnostic context)를 출력합니다. 
	 %% : % 표시를 출력하기 위해 사용한다.  
	 %t : 로그이벤트가 발생된 쓰레드의 이름을 출력합니다
	-->

    <!-- pattern -->
    <!-- [%-5level] %d{yy-MM-dd HH:mm:ss} %logger{36} - %msg%n -->
    <property name="LOG_PATTERN" value="[%-5level]	%d{YYYY-MM-dd HH:mm:ss.SSS}	[%logger{0}:%line] - %msg %n"/>

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    
    <!-- log 파일 저장 -->
	<appender name="LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>C:/chrystal/workspace/log/debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        	<fileNamePattern>C:/chrystal/workspace/log/debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        		<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<logger name="jdbc.sqlonly" level="debug" />
	<logger name="jdbc.resultsettable" level="debug" />
	<logger name="com.eunjy" level="debug"/>

    <!-- root 레벨 설정 -->
    <root level="DEBUG">
		<level value="debug" />
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="LOG_FILE"/>
    </root>

    <!-- 특정패키지 로깅레벨 설정 -->
   	<logger name="org.mybatis" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="LOG_FILE"/>
    </logger>
    
</configuration>